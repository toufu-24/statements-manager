# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, tsutaj
# This file is distributed under the same license as the statements-manager
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: statements-manager \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-02 07:28+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../quickstart.rst:5
msgid "クイックスタート"
msgstr ""

#: ../../quickstart.rst:8
msgid "リポジトリにある例を試してみたい方へ"
msgstr ""

#: ../../quickstart.rst:11
msgid "TODO(tsutaj): 分かりやすく書く"
msgstr ""

#: ../../quickstart.rst:13
msgid "まずは動作させてみたいという方は、以下のようにコマンドを実行してください。"
msgstr ""

#: ../../quickstart.rst:34
msgid "本ツールの導入の流れを知りたい方へ"
msgstr ""

#: ../../quickstart.rst:36
msgid "問題文と設定ファイルを実際に用意して動作させることで、本ツールの導入の流れを説明します。"
msgstr ""

#: ../../quickstart.rst:38
msgid ""
"たとえば、「整数 :math:`A` と :math:`B` が与えられるので、 :math:`A + B` "
"の計算結果を出力してください」という問題を作りたいとします。"
msgstr ""

#: ../../quickstart.rst:42
msgid "問題文を用意する"
msgstr ""

#: ../../quickstart.rst:44
msgid ""
"問題文を普通に書くと、以下のような Markdown ファイル ``statement_ja.md`` を作ることになるでしょう。(数式は "
"MathJax を想定した記法になっています)"
msgstr ""

#: ../../quickstart.rst:49
msgid "この Markdown にはいくつか問題点があります。"
msgstr ""

#: ../../quickstart.rst:51
msgid ""
"入力 :math:`A, B` に対する制約がファイルに直接書かれています。仮に :math:`A, B` の上限をともに "
":math:`10^{18}` "
"に変更しなければならないとき、問題文の制約とデータセット生成器で使う制約を両方変更しなければなりませんが、これを別々に変更するとミスが起きやすいです。"
msgstr ""

#: ../../quickstart.rst:52
msgid "サンプル入出力も直接書かれているため、上で述べたことと同様の問題が起きやすいです。また、サンプルのナンバリングもファイルに直接書かれているため、番号が重複したり抜け落ちたりする可能性があります。"
msgstr ""

#: ../../quickstart.rst:54
msgid "これらの問題を解消するため、statements-manager を導入して問題文を書き直していきます。"
msgstr ""

#: ../../quickstart.rst:57
msgid "問題制約とサンプル入出力を別ファイルに移す"
msgstr ""

#: ../../quickstart.rst:59
msgid ""
"サンプル入出力を別ファイルに移します。入力例 1 に対応するファイルは ``00_sample_00.in`` に、出力例 1 "
"に対応するファイルは ``00_sample_00.out`` に切り出して用意します。同様に入出力例 2 に対応するファイル "
"``00_sample_01.in``, ``00_sample_01.out`` も用意します。これらのファイルは全て ``tests`` "
"というディレクトリ内に格納しておきます。"
msgstr ""

#: ../../quickstart.rst:61
msgid "また、問題制約を問題文ファイルから分離するため、以下のような設定ファイル ``problem.toml`` を用意します。"
msgstr ""

#: ../../quickstart.rst:66
msgid ""
"これで問題制約とサンプル入出力を問題文から分離できました！最後に、問題文のファイル ``statement_ja.md`` "
"を次のように書き換えます。"
msgstr ""

#: ../../quickstart.rst:71
msgid "重要なのは、 **問題制約とサンプル入出力が問題文ファイルに直接書かれていない** ことです。"
msgstr ""

#: ../../quickstart.rst:75
msgid "TODO(tsutaj): 書く"
msgstr ""

#~ msgid ""
#~ "### 問題\n"
#~ "\n"
#~ "2 つの整数 $A$, $B$ が与えられます。$A + B$ の計算結果を出力してください。\n"
#~ "\n"
#~ "### 入力\n"
#~ "\n"
#~ "入力は以下の形式で標準入力から与えられます。\n"
#~ "\n"
#~ "```\n"
#~ "$A$ $B$\n"
#~ "```\n"
#~ "\n"
#~ "### 出力\n"
#~ "\n"
#~ "$A + B$ の計算結果を標準出力に出力してください。\n"
#~ "\n"
#~ "### 制約\n"
#~ "\n"
#~ "- $1 \\leq A, B \\leq 10^9$\n"
#~ "\n"
#~ "### 入力例 1\n"
#~ "\n"
#~ "```\n"
#~ "3 5\n"
#~ "```\n"
#~ "\n"
#~ "### 出力例 1\n"
#~ "\n"
#~ "```\n"
#~ "8\n"
#~ "```\n"
#~ "\n"
#~ "### 入力例 2\n"
#~ "\n"
#~ "```\n"
#~ "10000 100\n"
#~ "```\n"
#~ "\n"
#~ "### 出力例 2\n"
#~ "\n"
#~ "```\n"
#~ "10100\n"
#~ "```"
#~ msgstr ""

#~ msgid ""
#~ "サンプル入出力を別ファイルに移します。入力例 1 に対応するファイルは "
#~ "``00_sample_00.in`` に、出力例 1 に対応するファイルは "
#~ "``00_sample_00.out`` に切り出して用意します。同様に入出力例 2 に対応するファイル"
#~ " ``00_sample_01.in``, ``00_sample_01.out`` も用意します。"
#~ msgstr ""

#~ msgid ""
#~ "# 初回のみ\n"
#~ "pip install statements-manager\n"
#~ "git clone https://github.com/tsutaj/statements-manager.git\n"
#~ "\n"
#~ "# on 'statements-manager' directory\n"
#~ "ss-manager run ./sample\n"
#~ "\n"
#~ "# 実行後は、各問題ディレクトリ (H 問題以外) について\n"
#~ "# - ss-out ディレクトリ内に HTML が生成されている\n"
#~ "# - tests ディレクトリ内に制約ファイルが生成されている\n"
#~ "\n"
#~ "# \"How to use\" の 1. で述べられている設定を行うと H 問題に関しても HTML 生成可能です"
#~ msgstr ""

#~ msgid ""
#~ "### 問題\n"
#~ "\n"
#~ "2 つの整数 $A$, $B$ が与えられます。$A + B$ の計算結果を出力してください。\n"
#~ "\n"
#~ "### 入力\n"
#~ "\n"
#~ "入力は以下の形式で標準入力から与えられます。\n"
#~ "\n"
#~ "```\n"
#~ "$A$ $B$\n"
#~ "```\n"
#~ "\n"
#~ "### 出力\n"
#~ "\n"
#~ "$A + B$ の計算結果を標準出力に出力してください。\n"
#~ "\n"
#~ "### 制約\n"
#~ "\n"
#~ "- $1 \\leq A, B \\leq 10^9$\n"
#~ "\n"
#~ "### 入力例 1\n"
#~ "\n"
#~ "```\n"
#~ "3 5\n"
#~ "```\n"
#~ "\n"
#~ "### 出力例 1\n"
#~ "\n"
#~ "```\n"
#~ "8\n"
#~ "```\n"
#~ "\n"
#~ "### 入力例 2\n"
#~ "\n"
#~ "```\n"
#~ "10000 100\n"
#~ "```\n"
#~ "\n"
#~ "### 出力例 2\n"
#~ "\n"
#~ "```\n"
#~ "10100\n"
#~ "```\n"
#~ msgstr ""

#~ msgid ""
#~ "# problem id (it is used for the name of output html file)\n"
#~ "id = \"A\"\n"
#~ "\n"
#~ "# output params\n"
#~ "params_path = \"./tests/constraints.hpp\"\n"
#~ "\n"
#~ "# path to statements\n"
#~ "[[statements]]\n"
#~ "path = \"./statement/statement_ja.md\"\n"
#~ "lang = \"ja\"\n"
#~ "\n"
#~ "# write constraints\n"
#~ "[constraints]\n"
#~ "    MIN_AB = 1\n"
#~ "    MAX_AB = 1_000_000_000"
#~ msgstr ""

#~ msgid ""
#~ "\n"
#~ "### 問題\n"
#~ "\n"
#~ "2 つの整数 $A$, $B$ が与えられます。$A + B$ の計算結果を出力してください。\n"
#~ "\n"
#~ "### 入力\n"
#~ "\n"
#~ "入力は以下の形式で標準入力から与えられます。\n"
#~ "\n"
#~ "```\n"
#~ "$A$ $B$\n"
#~ "```\n"
#~ "\n"
#~ "### 出力\n"
#~ "\n"
#~ "$A + B$ の計算結果を標準出力に出力してください。\n"
#~ "\n"
#~ "### 制約\n"
#~ "\n"
#~ "- ${@constraints.MIN_AB} \\leq A, B \\leq {@constraints.MAX_AB}$\n"
#~ "\n"
#~ "\n"
#~ "{@samples.all}\n"
#~ msgstr ""

